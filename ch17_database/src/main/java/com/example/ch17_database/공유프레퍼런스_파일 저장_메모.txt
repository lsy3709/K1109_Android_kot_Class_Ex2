공유된 프리퍼런스 이용하기

앱의 데이터를 내부 저장소에 저장하려면 디비,파일 이용 가능하지만,
공유된 프리퍼런스 이용가능.(SharedPreferences)

플랫폼 API 에서 제공하는 클래스
데이터를 키-값 형태로 저장시 사용.
앱의 간단한 데이터를 저장하는데 유용.
내부적으로 내장 메모리의 앱 폴더에 XML 파일로 저장.

=========================================================================

SharedPreferences 객체를 얻는 방법 2가지

1) Activity.getPreferences(int mode)
2) Context.getSharedPreferences(String name, int mode)

1) Activity.getPreferences(int mode)

액티비티 단위로 데이터를 저장할 때 사용.
매개변수에 파일명 안들어감.
함수 호출시 액티비티 클래스명으로 XML 파일이 자동으로 만들어짐.
예)
MainActivity 라는 클래스에서
함수 호출해 SharedPreferences 객체를 얻으면 -> MainActivity.xml 파일 생성되고
데이터가 저장됨.

예2)
액티비티의 데이터 저장
val sharedPref = getPreferences(Context.MODE_PRIVATE)
=========================================================================

2) Context.getSharedPreferences(String name, int mode)

앱 전체의 데이터를 키-값 형태로 저장시
SharedPreferences 객체 얻을 때 이용함.
첫 번째 매개변수에 지정한 이름의 파일로 데이터가 저장.

예)
앱 전체의 데이터 저장
val sharedPref = getSharedPreferences("my_prefs",Context.MODE_PRIVATE)

=========================================================================

공유된 프리퍼런스를 이용해 저장시
SharedPreferences.Editor 클래스의 함수를 이용함.

예)
putBoolean(String key, boolean value)
putInt(String key, int value)
putFloat(String key, float value)
putLong(String key, long value)
putString(String key, String value)

SharedPreferences.Editor 객체는 SharedPreferences의 edit() 함수로 얻음.
put~ 시작하는 함수를 이용해 데이터를 담기.
commit() 호출 순간 저장.

예2)
프리퍼런스에 데이터 저장.
sharedPref.edit().run {
putString("data1", "hi")
putInt("data2", 10)
commit()
}


=========================================================================

프리퍼런스에 저장된 데이터를 가져오려면 SharedPreferences 의 게터 함수 이용하면 됨.

예)
getBoolean(String key, boolean value)
getInt(String key, int value)
getFloat(String key, float value)
getLong(String key, long value)
getString(String key, String value)

프리퍼런스에 저장된 데이터를 가져오기

예2)
val data1 = sharedPref.getString("data1","world")
val data2 = sharedPref.getInt("data2",10)


 프레퍼런스 저장 가져오기 샘플
                val pref = getSharedPreferences("inputPref", Context.MODE_PRIVATE)
                pref.edit().run {
                    putString("imgInfo", imgInfo)
                    commit()
                }
                val resultStr2 : String? = pref.getString("imgInfo","default")
                val result3 = resultStr2.toString()
                Log.d(TAG,"imgInfo result3 결과 : $resultStr2")
                Log.d(TAG,"imgInfo result3 결과 : $result3")


























